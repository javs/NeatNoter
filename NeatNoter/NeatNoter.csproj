<Project Sdk="Microsoft.NET.Sdk">

		<PropertyGroup>
			<Title>NeatNoter</Title>
			<Authors>kalilistic, karashiiro</Authors>
			<TargetFramework>net5.0-windows</TargetFramework>
			<Platforms>x64;AnyCPU</Platforms>
			<LangVersion>9</LangVersion>
			<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
			<Nullable>enable</Nullable>
			<Deterministic>true</Deterministic>
			<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
			<GenerateDocumentationFile>true</GenerateDocumentationFile>
			<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
			<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
			<OutputPath>bin\$(Configuration)\</OutputPath>
			<DalamudLibPath>$(appdata)\XIVLauncher\addon\Hooks\dev\</DalamudLibPath>
			<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
			<AssemblyVersion>1.4.6.1</AssemblyVersion>
			<FileVersion>1.4.6.1</FileVersion>
			<UseWindowsForms>true</UseWindowsForms>
			<Configurations>Debug;Release</Configurations>
		</PropertyGroup>
		
		<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
			<DebugSymbols>true</DebugSymbols>
			<DebugType>full</DebugType>
			<Optimize>false</Optimize>
			<OutputPath>bin\Debug\</OutputPath>
			<DefineConstants>DEBUG;TRACE</DefineConstants>
			<ErrorReport>prompt</ErrorReport>
			<WarningLevel>4</WarningLevel>
		</PropertyGroup>
		
		<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
			<DebugType>pdbonly</DebugType>
			<Optimize>true</Optimize>
			<OutputPath>bin\Release\</OutputPath>
			<DefineConstants>TRACE</DefineConstants>
			<ErrorReport>prompt</ErrorReport>
			<WarningLevel>4</WarningLevel>
		</PropertyGroup>
		
    <ItemGroup>
			<Reference Include="Dalamud">
				<HintPath>$(AppData)\XIVLauncher\addon\Hooks\dev\Dalamud.dll</HintPath>
				<Private>False</Private>
			</Reference>
			<Reference Include="ImGui.NET">
				<HintPath>$(AppData)\XIVLauncher\addon\Hooks\dev\ImGui.NET.dll</HintPath>
				<Private>False</Private>
			</Reference>
			<Reference Include="ImGuiScene">
				<HintPath>$(AppData)\XIVLauncher\addon\Hooks\dev\ImGuiScene.dll</HintPath>
				<Private>False</Private>
			</Reference>
			<Reference Include="Lumina">
				<HintPath>$(AppData)\XIVLauncher\addon\Hooks\dev\Lumina.dll</HintPath>
				<Private>False</Private>
			</Reference>
			<Reference Include="Lumina.Excel">
				<HintPath>$(AppData)\XIVLauncher\addon\Hooks\dev\Lumina.Excel.dll</HintPath>
				<Private>False</Private>
			</Reference>
			<Reference Include="Newtonsoft.Json">
				<HintPath>$(AppData)\XIVLauncher\addon\Hooks\dev\Newtonsoft.Json.dll</HintPath>
				<Private>False</Private>
			</Reference>
			<PackageReference Include="DalamudPackager" Version="2.1.2" />
    </ItemGroup>
		
		<Target Name="PostBuild" AfterTargets="Build">
			<ItemGroup>
				<InputAssemblies Include="$(TargetPath)" />
				<InputAssemblies Include="$(TargetDir)*.dll" Exclude="$(TargetPath)" />
			</ItemGroup>
			<MakeDir Directories="$(TargetDir)out\" />
			<Exec Command="copy $(TargetDir)$(TargetFileName) $(TargetDir)out\$(TargetFileName)" />
		</Target>
		
		<Target Name="PostBuild_Debug" AfterTargets="PostBuild" Condition="'$(Configuration)' == 'Debug'">
			<Exec Command="if not exist $(AppData)\XIVLauncher\devPlugins\$(TargetName) (mkdir $(AppData)\XIVLauncher\devPlugins\$(TargetName))" />
			<Exec Command="copy $(TargetDir)out\$(TargetFileName) $(AppData)\XIVLauncher\devPlugins\$(TargetName)\$(TargetFileName)" />
			<Exec Command="copy $(TargetDir)*.pdb $(AppData)\XIVLauncher\devPlugins\$(TargetName)" />
		</Target>
		
		<Target Name="PostBuild_Release" AfterTargets="PostBuild" Condition=" '$(Configuration)' == 'Release' ">
			<ItemGroup>
				<DeleteFiles Include="$(TargetDir)out\*.dll" Exclude="$(TargetDir)out\$(TargetFileName)" />
			</ItemGroup>
			<Delete Files="@(DeleteFiles)" />
			<DalamudPackager ProjectDir="$(ProjectDir)" OutputPath="$(OutputPath)out\" AssemblyName="$(AssemblyName)" VersionComponents="4" MakeZip="true"/>
			<MakeDir Directories="$(TargetDir)out\$(AssemblyName)\images" />
			<Exec Command="copy $(ProjectDir)..\assets\*.png $(TargetDir)out\$(AssemblyName)\images\*.png" />
		</Target>

</Project>
 